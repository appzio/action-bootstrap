<?php

/* turns inline styles into stylesheets */

class ArticlePreprocessor {



    public $styles;
    public $gid;
    public $playid;
    public $mobileobj;
    public $playobj;

    public function __construct(){

    }

    public function loadStyles(){

    }

    public function Process($data){

        if(isset($data->scroll)){
            $data->scroll = $this->doProcessing($data->scroll);
        }

        return $data;
    }

    public function saveStyles($playobj){

        if(!$this->styles){
            return false;
        }

        $existing_styles = json_decode($playobj->autogenerated_styles,true);

        if(!is_array($existing_styles)){
            $existing_styles = array();
        }

        $new_styles = (array)$this->styles;

        if(md5(serialize($existing_styles)) != md5(serialize($new_styles))){
            $this->playobj->autogenerated_styles = json_encode($new_styles);
            $this->playobj->update();

            $this->mobileobj->autogenerated_styles = json_encode($new_styles);
            $this->mobileobj->update();
        }

    }

    private function doProcessing($data){
        $output = array();

        foreach ($data as $node){
            
            if (isset($node->style_content)) {

                $md5 = md5(serialize($node->style_content));
                if(isset($this->styles[$md5])){
                    unset($node->style_content);
                    $node->style = $this->styles[$md5];
                } else {
                    $node->style = $this->addNewStyle($md5,$node->style_content);
                    unset($node->style_content);
                }

                if(isset($node->row_content)){
                    $node->row_content = $this->doProcessing($node->row_content);
                }

                if(isset($node->column_content)){
                    $node->column_content = $this->doProcessing($node->column_content);
                }

                if(isset($node->swipe_content)){
                    $node->swipe_content = $this->doProcessing($node->swipe_content);
                }

            }

            $output[] = $node;
        }

        return $output;
    }


    private function addNewStyle($md5,$stylecontent){
        $this->styles[$md5] = $stylecontent;
        return $md5;
    }

}